<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.young.manager.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.young.manager.pojo.Course">
    <id column="cid" jdbcType="BIGINT" property="cid" />
    <result column="course_code" jdbcType="VARCHAR" property="courseCode" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="start_week" jdbcType="INTEGER" property="startWeek" />
    <result column="end_week" jdbcType="INTEGER" property="endWeek" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="course_time" jdbcType="VARCHAR" property="courseTime" />
    <result column="choose_number" jdbcType="INTEGER" property="chooseNumber" />
    <result column="limit" jdbcType="INTEGER" property="limit" />
    <result column="sid" jdbcType="BIGINT" property="sid" />
    <result column="c_image" jdbcType="VARCHAR" property="cImage" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.young.manager.pojo.Course">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cid, course_code, course_name, teacher, start_week, end_week, location, course_time, 
    choose_number, limit, sid, c_image
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.young.manager.pojo.CourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.young.manager.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where cid = #{cid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course
    where cid = #{cid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.young.manager.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.young.manager.pojo.Course">
    insert into course (cid, course_code, course_name, 
      teacher, start_week, end_week, 
      location, course_time, choose_number, 
      limit, sid, c_image, 
      description)
    values (#{cid,jdbcType=BIGINT}, #{courseCode,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{startWeek,jdbcType=INTEGER}, #{endWeek,jdbcType=INTEGER}, 
      #{location,jdbcType=VARCHAR}, #{courseTime,jdbcType=VARCHAR}, #{chooseNumber,jdbcType=INTEGER}, 
      #{limit,jdbcType=INTEGER}, #{sid,jdbcType=BIGINT}, #{cImage,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.young.manager.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        cid,
      </if>
      <if test="courseCode != null">
        course_code,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="startWeek != null">
        start_week,
      </if>
      <if test="endWeek != null">
        end_week,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="chooseNumber != null">
        choose_number,
      </if>
      <if test="limit != null">
        limit,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="cImage != null">
        c_image,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cid != null">
        #{cid,jdbcType=BIGINT},
      </if>
      <if test="courseCode != null">
        #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="startWeek != null">
        #{startWeek,jdbcType=INTEGER},
      </if>
      <if test="endWeek != null">
        #{endWeek,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="chooseNumber != null">
        #{chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="limit != null">
        #{limit,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=BIGINT},
      </if>
      <if test="cImage != null">
        #{cImage,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.young.manager.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=BIGINT},
      </if>
      <if test="record.courseCode != null">
        course_code = #{record.courseCode,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.startWeek != null">
        start_week = #{record.startWeek,jdbcType=INTEGER},
      </if>
      <if test="record.endWeek != null">
        end_week = #{record.endWeek,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTime != null">
        course_time = #{record.courseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.chooseNumber != null">
        choose_number = #{record.chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="record.limit != null">
        limit = #{record.limit,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=BIGINT},
      </if>
      <if test="record.cImage != null">
        c_image = #{record.cImage,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=BIGINT},
      course_code = #{record.courseCode,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      start_week = #{record.startWeek,jdbcType=INTEGER},
      end_week = #{record.endWeek,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=VARCHAR},
      choose_number = #{record.chooseNumber,jdbcType=INTEGER},
      limit = #{record.limit,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=BIGINT},
      c_image = #{record.cImage,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set cid = #{record.cid,jdbcType=BIGINT},
      course_code = #{record.courseCode,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      start_week = #{record.startWeek,jdbcType=INTEGER},
      end_week = #{record.endWeek,jdbcType=INTEGER},
      location = #{record.location,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=VARCHAR},
      choose_number = #{record.chooseNumber,jdbcType=INTEGER},
      limit = #{record.limit,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=BIGINT},
      c_image = #{record.cImage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.young.manager.pojo.Course">
    update course
    <set>
      <if test="courseCode != null">
        course_code = #{courseCode,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="startWeek != null">
        start_week = #{startWeek,jdbcType=INTEGER},
      </if>
      <if test="endWeek != null">
        end_week = #{endWeek,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="chooseNumber != null">
        choose_number = #{chooseNumber,jdbcType=INTEGER},
      </if>
      <if test="limit != null">
        limit = #{limit,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=BIGINT},
      </if>
      <if test="cImage != null">
        c_image = #{cImage,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.young.manager.pojo.Course">
    update course
    set course_code = #{courseCode,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      start_week = #{startWeek,jdbcType=INTEGER},
      end_week = #{endWeek,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=VARCHAR},
      choose_number = #{chooseNumber,jdbcType=INTEGER},
      limit = #{limit,jdbcType=INTEGER},
      sid = #{sid,jdbcType=BIGINT},
      c_image = #{cImage,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.young.manager.pojo.Course">
    update course
    set course_code = #{courseCode,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      start_week = #{startWeek,jdbcType=INTEGER},
      end_week = #{endWeek,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=VARCHAR},
      choose_number = #{chooseNumber,jdbcType=INTEGER},
      limit = #{limit,jdbcType=INTEGER},
      sid = #{sid,jdbcType=BIGINT},
      c_image = #{cImage,jdbcType=VARCHAR}
    where cid = #{cid,jdbcType=BIGINT}
  </update>
</mapper>